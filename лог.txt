1. 10 дней (2 недели)

1 урок с 15 часов до 16:30
с 16:30 до 17:30 - перерыв, где
30-45 минут на личное время, а 
оставшееся время на общение и игры

2 урок с 17:30 до 19 часов

в середине уроков - перерывы на 5 минут

2. знакомство

Артём Дмитриевич, любит котиков

Максим, 15 годиков, любит играть в дотку, занимается спортом 

Даниил, 16 годиков, занимается спортом, не любит играть в дотку

3. общая теория

программирование - процесс создания компьютерных программ
программа - алгоритмы + структуры данных
алгоритм - последовательное выполнение действий
структура данных - определенное расположение элементов

задача (проблема) - запрос на получение или изменение некоторых данных или запрос на определенное действие программы

решение (продукт, пакет, проект) - средства, которые позволяют определенным образом решать задачу

разработка - алгоритм действий по созданию решения

4. теория Python

- работа в консоли

5. интересные факты

Артём Дмитриевич -
- знаю немецкий язык (неправда)
- бывал за границей
- не ломал кости

Максим - 
- хорошо играет в доту (неправда)
- участвовал в игровых турнирах
- редко выходит на улицу

Даниил -
- не любит говяжий дошик
- много чего ломал (кости)
- у него игровой компьютер (неправда)


6. зачем нужны текстовые редакторы

- текстовые редакторы совмещают в себе файловый менеджер, ->
-> редактирование кода и консоль выполнения


7. основные консольные команды

- clear, cls - очистка консоли
- cd - смена папки
- cd.. - переход в предыдущую папку
- python - выполнение кода на python
- pip list - список установленных модулей, библиотек и фреймворков python
- pip install Django - установка фреймворка Django
- django-admin - администрирование проектов в Django
- pip install setuptools - инструменты для установки
- django-admin startproject название - создаем новый проект (сайт)
- python manage.py startapp - создание нового веб-приложения
- python manage.py runserver - запустить ОТЛАДОЧНЫЙ сервер

8. фреймворк Django
- Django - готовая среда для создания и запуска сайтов
- Django не требует никаких дополнительных знаний

установка Django
1) сначала надо убедиться, что фреймворка Django нет на компьютере
-> с помощью команды pip list

9. Django
- после создания проекта появляется папка всего проекта
- одноименная (и это важно) папка содержит в себе настройки сайта
-- init.py говорит о том, что это отдельный модуль (один файл)
-- asgi.py - Asynchronous Server Gateway Interface 
-- settings.py - настройки сайта
-- urls.py - файл со всеми ссылками и адресами
-- wsgi.py - Web-Server Gateway Interface
- manage.py - менеджер сайта

-- migrations - папка для миграций данных
-- admin.py - файл администрирования страницы
-- apps.py - информация о приложении
-- models.py - модели, которые будут на странице
-- views.py - внешний вид страницы (сайта)
-- db.sqlite3 - база данных для сайта

- после создания нового приложения его нужно зарегистрировать
- регистрация приложения осуществляется в файле settings.py

10. основы веб-технологий
- интернет - международная электронная сеть для обмена данными
- протокол - определенные правила для передачи данных
популярные протоколы: HTTP(S), IP, DNS, SSH, TCP 
HTTP - HyperText Tranfering Protocol (протокол передачи гипертекста)
[гипертекст от обычного текста отличается наличием ссылок]
IP - протокол адреса в содержит
DNS - протокол домена (принадлежности к серверу)
SSH - протокол безопасного хэширования
TCP - протокол контроля передачи данных
URL - Uniform Resourse Locator - протокол поиска содержимого по ссылке

сервер - компьютер, который служит либо хранилищем данных, либо посредником их передачи
клиент - компьютер, который получает данные от сервера или отдает их ему

запрос - команда для старта передачи данных или их чтения
четыре основных запроса - GET, POST, PUT, DELETE
GET - получить что-то
POST - отдать что-то
PUT - изменить что-то

код операции - состояние операции в цифровом виде
200 - запрос успешен
404 - ресурс не найден
403 - доступ к ресурсу запрещен
502 - не тот шлюз для получения ресурса
304 - нет обновления контента

веб-браузер - программа для чтения веб-страниц
веб-страница - текстовый документ, который использует данные сервера
веб-сайт - пачка веб-страниц, связанных между собой

maintenance (техподдержка) - создание условий для стабильной работы проекта

11. веб-технологии и шаблоны в Django

- веб-стандарты
это то, без чего невозможно создать сайт

-- HTML (HyperText Markup Language) - язык вёрстки объектов
вёрстка - расположение элементов на макете

-- CSS (Cascading Style Sheets) - таблица каскадных стилей
язык, который регулирует правила применения стилей

-- JS (JavaScript) - язык процессов
нужен для дополнительной динамики и взаимодействия с сервисами

12. интересные факты, часть 2

Артём Дмитриевич
- мой любимый цвет - фиолетовый
- я умею играть на гитаре
- я умею шевелить ушами (неправда)

Даниил
- играет в бравл старс
- играет на фортепиано
- построил скворечник (неправда)

Максим
- любит читать (неправда)
- очень злой
- умеет водить машину

12. последовательность установки проекта Django 

1) обеспечить приемлемые (как минимум) условия разработки
2) установить и проверить Python (pip list - установленные пакеты)
3) задать (создать) папку для проекта
4) установить Django (pip install Django)
5) создать проект Django (django-admin startproject название)
6) создать веб-приложение (python manage.py название)
7) запустить отладочный сервер (python manage.py runserver)

13. шаблоны в Django
шаблон (template) - веб-страница, куда подставляются данные
для шаблонов нужна отдельная папка templates

как запустить шаблон в Django?
1) файл urls.py является маршрутизатором
2) нужно в приложении создать папку и сделать там адреса
3) в файле views.py должны находиться функции отображения
4) в файле urls.py нужно прописать маршрут, который обслуживается функцией из views

14. статика в Django
статический документ - документ, содержащий в себе неисполняемый код (медиа-файлы)
папка static содержит в себе стили, картинки, шрифты, аудио и т.д.
алгоритм привязывания статики в Django
1) создать папку static в основной папке проекта
2) в файле settings.py нужно добавить конфигурацию STATICFILES_DIRS
3) в шаблоне достать файлы статики с помощью функциональных тегов {% load static %} и {% static 'название файла' %}

15. интересные факты (раунд 3)
Артём Дмитриевич
- сплю меньше 5 часов
- я люблю рыбу
- есть разряд по спорту (неправда)

Максим
- любит играть в игры
- не любит рыбу (неправда)
- вспыльчивый

Даниил
- любит гречку (неправда)
- не любит супы
- не играл в доту

16. добавление новых страничек
1) создаем новый шаблон в папке templates
2) нужно создать функцию, которая будет показывать новый шаблон в файле views.py
3) нужно зарегистрировать ссылку в файле urls.py

17. базы данных 
большая и сложная область IT, которая занимается хранением данных и запросами к данным
SQL (Structured Query Language) - язык структурированных запросов
CREATE, ORDER_BY, WHERE, GET, PULL

SQLite - стандарт для работы с базами данных

ORM (Object-Relational Mapping) - привязка базы данных к объектам

API (Application Programming Interface) - драйвер между клиентом и сервером

база данных - это таблица
миграция - это изменение состояния модели

еще команды:

python manage.py makemigrations - создание файла миграций
python manage.py migrate - процесс миграции (изменения модели)
python manage.py shell - консоль Django для проекта

18. 
- закрепление материала, создание нового веб-приложения
- GitHub и публикация проектов

валидирование (валидация) - процесс приведения данных в нужный вид

рефакторинг - пересборка проекта, изменение его конфигурации, переработка проекта

19. веб-дизайн и закрепление баз данных

MVC - Model View Controller - архитектура веб-приложения
эта модель связывает воедино используемые в проекте данные, их отображение и их взаимосвязи

MTV - Model Template Views

display: flex; - создание флекс-контейнера
justify-content: space-evenly; - распределение контента в контейнере равномерно

3 способа записывать отступы:

margin - внешние отступы
padding - внутренние отступы

- указать сразу все отступы (margin: 10px;)
- указать конкретную сторону отступа (margin-left, margin-right, margin-top, margin-bottom)
- указать универсальный отступ (margin: 10px 0px 5px 10px; - сверху, справа, снизу, слева)

20. закрепление веб-дизайна, публикация проекта

Bootstrap - одна из крупнейших веб-библиотек
сниппет - готовый кусок кода

версия - копия документа, которая поддерживается не так, как документ
версия 103.0.5060.114 - релизы, бета-версии, тесты, (обновления?)

